/* * File Name:  PasswordDialog.java * Copyright:  Beijing Jaeger Communication Electronic Technology Co., Ltd. Copyright YYYY-YYYY,  All rights reserved * Descriptions:  <Descriptions> * Changed By:   gtsong * Changed Time:  2014-2-19 * Changed Content:  <Changed Content> */package com.pbi.dvb.view;import android.app.Dialog;import android.content.Context;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.KeyEvent;import android.view.MotionEvent;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.widget.TextView;import com.pbi.dvb.EpgActivity;import com.pbi.dvb.R;import com.pbi.dvb.global.Config;import com.pbi.dvb.utils.LogUtils;/** * <dvb password dialog> <Functional Details> *  * @author * @version [Version Number, 2014-2-19] * @see [Relevant Class/Method] * @since [Product/Module Version] */public class PasswordDialog extends Dialog{    private static final String TAG = "PasswordDialog";        private Handler mHandler;        private Context mContext;        private TextView tvTitle;        private TextView tvPwd;        private String message;        private boolean isCaLock = false;        private StringBuilder passwordInput;        public PasswordDialog(Context context, String message, Handler handler)    {        super(context);        this.mContext = context;        this.message = message;        this.mHandler = handler;    }        @Override    protected void onCreate(Bundle savedInstanceState)    {        super.onCreate(savedInstanceState);        setContentView(R.layout.dialog_password);    }        @Override    protected void onStart()    {        super.onStart();        tvTitle = (TextView)this.findViewById(R.id.tv_pwd_tips);        tvPwd = (TextView)this.findViewById(R.id.tv_pwd);        tvTitle.setText(message);        passwordInput = new StringBuilder();    }        public void setMessage(String message)    {        if (null == tvTitle)        {            tvTitle = (TextView)this.findViewById(R.id.tv_pwd_tips);        }        tvTitle.setText(message);    }        public void setCaLock(boolean isCaLock)    {        this.isCaLock = isCaLock;    }        @Override    public boolean onKeyDown(int keyCode, KeyEvent event)    {        StringBuilder pStar = new StringBuilder();        /*-------------Press the digital key-----------------*/        if (keyCode >= KeyEvent.KEYCODE_0 && keyCode <= KeyEvent.KEYCODE_9)        {            if (event.getAction() == MotionEvent.ACTION_DOWN)            {                passwordInput.append(keyCode - KeyEvent.KEYCODE_0);            }                        if (null != passwordInput)            {                for (int i = 0; i < passwordInput.length(); i++)                {                    pStar.append("*");                    tvPwd.setText(pStar);                }            }            if (passwordInput.length() == 4)            {                pStar.delete(0, pStar.length());                // ca adult lock,return input password.                if (isCaLock)                {                    Message msg = new Message();                    msg.obj = passwordInput.toString();                    msg.what = EpgActivity.PROCESS_LOCKS;                    mHandler.sendMessage(msg);                    return true;                }                                String superPwd = android.provider.Settings.System.getString(mContext.getContentResolver(), "password");                if (null == superPwd)                {                    superPwd = Config.PROGRAMME_LOCK;                }                // process password                if (passwordInput.toString().equalsIgnoreCase(superPwd)                    || passwordInput.toString().equalsIgnoreCase(Config.SUPER_PASSWORD))                {                                        Message msg = new Message();                    msg.obj = passwordInput.toString();                    msg.what = EpgActivity.PROCESS_LOCKS;                    mHandler.sendMessage(msg);                                        tvPwd.setText(null);                    pStar.delete(0, pStar.length());                    passwordInput.delete(0, passwordInput.length());                }                else                {                    tvTitle.setText(mContext.getString(R.string.password_wrong_tips));                    Animation shake = AnimationUtils.loadAnimation(mContext, R.anim.shake);                    tvPwd.startAnimation(shake);                    tvPwd.setText(null);                                        pStar.delete(0, pStar.length());                    passwordInput.delete(0, passwordInput.length());                }            }            return true;        }        /*-------------Press the del key-----------------*/        if (keyCode == Config.KEY_FAST_CHANGE)        {            passwordInput.delete(0, passwordInput.length());            pStar.delete(0, pStar.length());            tvPwd.setText(null);            tvTitle.setText(message);            return true;        }        // forbid the back key.        if (keyCode == KeyEvent.KEYCODE_BACK)        {            return true;        }        if (keyCode == KeyEvent.KEYCODE_DPAD_DOWN)        {            LogUtils.printLog(1, 3, TAG, "--->>> password dialog send message DOWN_SWITCH_SERVICE!");            mHandler.sendEmptyMessage(Config.DOWN_SWITCH_SERVICE);            return true;        }        if (keyCode == KeyEvent.KEYCODE_DPAD_UP)        {            LogUtils.printLog(1, 3, TAG, "--->>> password dialog send message UP_SWITCH_SERVICE!");            mHandler.sendEmptyMessage(Config.UP_SWITCH_SERVICE);            return true;        }        return super.onKeyDown(keyCode, event);    }}